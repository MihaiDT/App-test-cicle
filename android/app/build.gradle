plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
            applicationId "it.tandu.lines"
            resValue "string", "app_name", "[DEV] Lines"
        }
        prod {
            dimension "flavor-type"
            applicationId "it.fater.lines"
            resValue "string", "app_name", "Lines"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----
    namespace "com.example.lines_flutter"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 21 // flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    /*  signingConfigs {
          debug {
              storeFile file("LinesKeyDev.keystore")
              storePassword "LinesPassword!"
              keyAlias "LinesKeyDev"
              keyPassword "LinesPassword!"
          }

          release {
              storeFile file("LinesKey.keystore")
              storePassword "LinesPassword!"
              keyAlias "LinesKey"
              keyPassword "LinesPassword!"
          }
      }

      buildTypes {
          debug {
              signingConfig signingConfigs.debug
          }

          release {
              signingConfig signingConfigs.release
          }
      }*/
}

flutter {
    source '../..'
}

dependencies {}
